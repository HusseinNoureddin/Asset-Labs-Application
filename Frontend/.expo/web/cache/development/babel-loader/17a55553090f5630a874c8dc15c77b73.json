{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/mnt/c/Users/Hussein/Desktop/Programs/POOS/Large Project/AssetLabs/screens/ResetScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport Colors from \"../components/Colors\";\nimport md5 from \"../components/md5\";\n\nvar ResetScreen = function ResetScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      newPassword = _useState2[0],\n      setNewPassword = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmNewPassword = _useState4[0],\n      setConfirmNewPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var back = function back() {\n    navigation.pop();\n  };\n\n  var passwordReset = function passwordReset() {\n    var hash, obj, js, response;\n    return _regeneratorRuntime.async(function passwordReset$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(newPassword != confirmNewPassword)) {\n              _context.next = 4;\n              break;\n            }\n\n            setMessage(\"Passwords don't match\");\n            _context.next = 19;\n            break;\n\n          case 4:\n            setMessage(\"Just a moment please...\");\n            hash = md5(newPassword);\n            obj = {\n              Email: global.email,\n              Password: hash\n            };\n            js = JSON.stringify(obj);\n            _context.prev = 8;\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(fetch('https://cop-4331-16.herokuapp.com/api/reset', {\n              method: 'POST',\n              body: js,\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 11:\n            response = _context.sent;\n            navigation.push('LoginScreen');\n            console.log(\"Password successfully resetted\");\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](8);\n            console.log(\"error : \" + _context.t0);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[8, 16]], Promise);\n  };\n\n  return React.createElement(ImageBackground, {\n    source: require(\"../img/MainBackground.jpg\"),\n    style: styles.background,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: back,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.backContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(BackButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Reset your password.\")), React.createElement(View, {\n    style: styles.subtitleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.subtitleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Try not to forget it this time\")), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.placeHolder,\n    placeholder: \"New Password\",\n    placeholderTextColor: \"silver\",\n    onChangeText: function onChangeText(val) {\n      return setNewPassword(val);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.placeHolder,\n    placeholder: \"Confirm New Password\",\n    placeholderTextColor: \"silver\",\n    onChangeText: function onChangeText(val) {\n      return setConfirmNewPassword(val);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, message), React.createElement(TouchableOpacity, {\n    onPress: passwordReset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.loginButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Reset\"))))));\n};\n\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1\n  },\n  titleText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  titleContainer: {\n    paddingLeft: 25,\n    paddingTop: 5\n  },\n  subtitleText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 24,\n    color: 'white'\n  },\n  subtitleContainer: {\n    paddingLeft: 25,\n    paddingTop: 5\n  },\n  backContainer: {\n    paddingLeft: 25,\n    paddingTop: 30\n  },\n  inputContainer: {\n    flex: 1,\n    alignItems: 'center',\n    paddingTop: 85\n  },\n  placeHolder: {\n    height: 45,\n    width: 317,\n    borderColor: 'silver',\n    borderRadius: 14,\n    borderWidth: 1,\n    backgroundColor: Colors.grey,\n    marginBottom: 20,\n    color: 'silver',\n    paddingLeft: 20\n  },\n  login: {\n    height: 45,\n    width: 317,\n    borderRadius: 14,\n    paddingVertical: 12,\n    paddingHorizontal: 10,\n    backgroundColor: 'white'\n  },\n  loginText: {\n    color: 'black',\n    fontSize: 17,\n    flexDirection: 'row',\n    textAlign: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  loginButton: {\n    paddingTop: 330\n  },\n  text: {\n    color: 'silver',\n    fontSize: 14,\n    flexDirection: 'row',\n    textAlign: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    paddingTop: 0\n  }\n});\nexport default ResetScreen;","map":{"version":3,"sources":["/mnt/c/Users/Hussein/Desktop/Programs/POOS/Large Project/AssetLabs/screens/ResetScreen.js"],"names":["React","useState","BackButton","Colors","md5","ResetScreen","navigation","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","message","setMessage","back","pop","passwordReset","hash","obj","Email","global","email","Password","js","JSON","stringify","fetch","method","body","headers","response","push","console","log","require","styles","background","backContainer","titleContainer","titleText","subtitleContainer","subtitleText","inputContainer","placeHolder","val","text","loginButton","login","loginText","StyleSheet","create","flex","justifyContent","alignItems","fontSize","fontWeight","color","paddingLeft","paddingTop","height","width","borderColor","borderRadius","borderWidth","backgroundColor","grey","marginBottom","paddingVertical","paddingHorizontal","flexDirection","textAlign","alignSelf"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, View, StyleSheet,\r\n         ImageBackground,\r\n         TouchableOpacity, TextInput} from 'react-native';\r\n\r\nimport BackButton from '../components/BackButton';\r\nimport Colors from '../components/Colors';\r\nimport md5 from '../components/md5';\r\n        \r\nconst ResetScreen = ({navigation}) => {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const back = () => {\r\n    navigation.pop();\r\n  };\r\n\r\n  const passwordReset = async () => \r\n  {\r\n    if (newPassword != confirmNewPassword)\r\n    {\r\n      setMessage(\"Passwords don't match\");\r\n    }\r\n    else\r\n    {\r\n      setMessage(\"Just a moment please...\");\r\n      var hash = md5(newPassword);\r\n      var obj = {Email: global.email, Password: hash};\r\n      var js = JSON.stringify(obj);\r\n      try\r\n      {\r\n        const response = await fetch('https://cop-4331-16.herokuapp.com/api/reset',\r\n          {method:'POST', body:js, headers:{'Content-Type': 'application/json'}});\r\n\r\n        navigation.push('LoginScreen');\r\n        console.log(\"Password successfully resetted\");\r\n      }\r\n      catch(e)\r\n      {\r\n        console.log(\"error : \" + e);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ImageBackground source={require('../img/MainBackground.jpg')}\r\n                       style={styles.background}>\r\n      <TouchableOpacity onPress={back}>\r\n        <View style={styles.backContainer}>\r\n          <BackButton></BackButton>\r\n        </View>\r\n      </TouchableOpacity>\r\n      <View style={styles.titleContainer}>\r\n        <Text style={styles.titleText}>\r\n          Reset your password.\r\n        </Text>\r\n      </View>\r\n      <View style={styles.subtitleContainer}>\r\n        <Text style={styles.subtitleText}>\r\n          Try not to forget it this time\r\n        </Text>\r\n      </View>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput style={styles.placeHolder} \r\n          placeholder=\"New Password\"\r\n          placeholderTextColor='silver'\r\n          onChangeText={(val) => setNewPassword(val)}\r\n        />\r\n        <TextInput style={styles.placeHolder} \r\n          placeholder=\"Confirm New Password\"\r\n          placeholderTextColor='silver'\r\n          onChangeText={(val) => setConfirmNewPassword(val)}\r\n        />\r\n        <Text style={styles.text}>{message}</Text>\r\n        <TouchableOpacity onPress={passwordReset}>\r\n          <View style={styles.loginButton}>\r\n            <View style={styles.login}>\r\n              <Text style={styles.loginText}>\r\n                Reset\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n  },\r\n  titleText: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n    color: 'white'\r\n  },\r\n  titleContainer: {\r\n    paddingLeft: 25,\r\n    paddingTop: 5\r\n  },\r\n  subtitleText: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: 24,\r\n    color: 'white'\r\n  },\r\n  subtitleContainer: {\r\n    paddingLeft: 25,\r\n    paddingTop: 5\r\n  },\r\n  backContainer: {\r\n    paddingLeft: 25,\r\n    paddingTop: 30\r\n  },\r\n  inputContainer:{\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    paddingTop: 85,\r\n  },\r\n  placeHolder: {\r\n    height: 45, \r\n    width: 317, \r\n    borderColor: 'silver', \r\n    borderRadius: 14, \r\n    borderWidth: 1,  \r\n    backgroundColor: Colors.grey,\r\n    marginBottom: 20, color: 'silver',\r\n    paddingLeft: 20\r\n  },\r\n  login: {\r\n    height: 45,\r\n    width: 317,\r\n    borderRadius: 14,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: 'white',\r\n  },\r\n  loginText: { \r\n    color: 'black',\r\n    fontSize: 17,\r\n    flexDirection: 'row',\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n    alignSelf: 'center', \r\n  },\r\n  loginButton: {\r\n    paddingTop: 330\r\n  },\r\n  text: { \r\n    color: 'silver',\r\n    fontSize: 14,\r\n    flexDirection: 'row',\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n    alignSelf: 'center', \r\n    paddingTop: 0\r\n  },\r\n});\r\n\r\nexport default ResetScreen;\r\n"]},"metadata":{},"sourceType":"module"}