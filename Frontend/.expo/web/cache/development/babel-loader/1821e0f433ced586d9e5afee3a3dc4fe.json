{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/mnt/c/Users/Hussein/Desktop/Programs/POOS/Large Project/AssetLabs/screens/VerifyEmailScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport Colors from \"../components/Colors\";\n\nvar VerifyEmailScreen = function VerifyEmailScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      code = _useState2[0],\n      setCode = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var back = function back() {\n    navigation.pop();\n  };\n\n  var verifyCodes = function verifyCodes() {\n    return _regeneratorRuntime.async(function verifyCodes$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(code != global.generatedCode)) {\n              _context.next = 4;\n              break;\n            }\n\n            setMessage(\"Code Input Incorrect\");\n            _context.next = 6;\n            break;\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(register());\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var register = function register() {\n    var obj, js, response, res;\n    return _regeneratorRuntime.async(function register$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            obj = {\n              FirstName: global.firstName,\n              LastName: global.lastName,\n              Email: global.email,\n              Login: global.username,\n              Password: global.password,\n              Phone: global.phone,\n              CompanyName: global.companyName\n            };\n            js = JSON.stringify(obj);\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(fetch('https://cop-4331-16.herokuapp.com/api/register', {\n              method: 'POST',\n              body: js,\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 5:\n            response = _context2.sent;\n            _context2.t0 = JSON;\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(response.text());\n\n          case 9:\n            _context2.t1 = _context2.sent;\n            res = _context2.t0.parse.call(_context2.t0, _context2.t1);\n            console.log(JSON.stringify(res));\n            console.log(\"Successfully Registered!\");\n            navigation.push('LoginScreen');\n            _context2.next = 19;\n            break;\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t2 = _context2[\"catch\"](2);\n            console.log(\"error : \" + _context2.t2);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 16]], Promise);\n  };\n\n  return React.createElement(ImageBackground, {\n    source: require(\"../img/MainBackground.jpg\"),\n    style: styles.background,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: back,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.backContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(BackButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.titleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Your almost there.\")), React.createElement(View, {\n    style: styles.subtitleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.subtitleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Let's verify your email.\")), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.placeHolder,\n    placeholder: \"Code\",\n    placeholderTextColor: \"silver\",\n    onChangeText: function onChangeText(val) {\n      return setCode(val);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.checkText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \" \", \"Check your email for a code.\"), React.createElement(TouchableOpacity, {\n    onPress: verifyCodes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.verifyButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.verify,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.verifyText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Verify Email\"))))));\n};\n\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1\n  },\n  titleText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  titleContainer: {\n    paddingLeft: 25,\n    paddingTop: 5\n  },\n  subtitleText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 24,\n    color: 'white'\n  },\n  subtitleContainer: {\n    paddingLeft: 25,\n    paddingTop: 5\n  },\n  backContainer: {\n    paddingLeft: 25,\n    paddingTop: 30\n  },\n  inputContainer: {\n    flex: 1,\n    alignItems: 'center',\n    paddingTop: 50\n  },\n  placeHolder: {\n    height: 45,\n    width: 317,\n    borderColor: 'silver',\n    borderRadius: 14,\n    borderWidth: 1,\n    backgroundColor: Colors.grey,\n    marginBottom: 5,\n    color: 'silver',\n    paddingLeft: 20\n  },\n  verify: {\n    height: 45,\n    width: 317,\n    borderRadius: 14,\n    paddingVertical: 12,\n    paddingHorizontal: 10,\n    backgroundColor: 'white'\n  },\n  verifyText: {\n    color: 'black',\n    fontSize: 17,\n    flexDirection: 'row',\n    textAlign: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  verifyButton: {\n    paddingTop: 380\n  },\n  checkText: {\n    color: 'silver',\n    fontSize: 14,\n    paddingRight: 150,\n    paddingBottom: 45\n  }\n});\nexport default VerifyEmailScreen;","map":{"version":3,"sources":["/mnt/c/Users/Hussein/Desktop/Programs/POOS/Large Project/AssetLabs/screens/VerifyEmailScreen.js"],"names":["React","useState","BackButton","Colors","VerifyEmailScreen","navigation","code","setCode","message","setMessage","back","pop","verifyCodes","global","generatedCode","register","obj","FirstName","firstName","LastName","lastName","Email","email","Login","username","Password","password","Phone","phone","CompanyName","companyName","js","JSON","stringify","fetch","method","body","headers","response","text","res","parse","console","log","push","require","styles","background","backContainer","titleContainer","titleText","subtitleContainer","subtitleText","inputContainer","placeHolder","val","checkText","verifyButton","verify","verifyText","StyleSheet","create","flex","justifyContent","alignItems","fontSize","fontWeight","color","paddingLeft","paddingTop","height","width","borderColor","borderRadius","borderWidth","backgroundColor","grey","marginBottom","paddingVertical","paddingHorizontal","flexDirection","textAlign","alignSelf","paddingRight","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, View, StyleSheet,\r\n         ImageBackground,\r\n         TouchableOpacity, TextInput} from 'react-native';\r\n\r\nimport BackButton from '../components/BackButton';\r\nimport Colors from '../components/Colors';\r\n\r\nconst VerifyEmailScreen = ({navigation}) => {\r\n  const [code, setCode] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const back = () => {\r\n    navigation.pop();\r\n  };\r\n\r\n  const verifyCodes = async () =>\r\n  {\r\n    if (code != global.generatedCode)\r\n    {\r\n      setMessage(\"Code Input Incorrect\");\r\n    }\r\n    else\r\n    {\r\n      await register();\r\n    }\r\n  }\r\n\r\n  const register = async () => \r\n  {\r\n    var obj = \r\n    {\r\n      FirstName: global.firstName,\r\n      LastName: global.lastName,\r\n      Email: global.email,\r\n      Login: global.username,\r\n      Password: global.password, \r\n      Phone: global.phone, \r\n      CompanyName: global.companyName\r\n    };\r\n\r\n    var js = JSON.stringify(obj);\r\n\r\n    try\r\n    {\r\n      const response = await fetch('https://cop-4331-16.herokuapp.com/api/register',\r\n        {method:'POST',body:js,headers:{'Content-Type': 'application/json'}});\r\n\r\n      var res = JSON.parse(await response.text());\r\n\r\n      // Testing Purposes\r\n      console.log(JSON.stringify(res));\r\n      console.log(\"Successfully Registered!\");\r\n\r\n      navigation.push('LoginScreen');\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log(\"error : \" + e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ImageBackground source={require('../img/MainBackground.jpg')}\r\n                       style={styles.background}>\r\n      <TouchableOpacity onPress={back}>\r\n        <View style={styles.backContainer}>\r\n          <BackButton></BackButton>\r\n        </View>\r\n      </TouchableOpacity>\r\n      <View style={styles.titleContainer}>\r\n        <Text style={styles.titleText}>\r\n          Your almost there.\r\n        </Text>\r\n      </View>\r\n      <View style={styles.subtitleContainer}>\r\n        <Text style={styles.subtitleText}>\r\n          Let's verify your email.\r\n        </Text>\r\n      </View>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput style={styles.placeHolder} \r\n          placeholder=\"Code\"\r\n          placeholderTextColor='silver'\r\n          onChangeText={(val) => setCode(val)}\r\n        />\r\n        <Text style={styles.checkText}>\r\n          {\" \"}Check your email for a code.\r\n        </Text>\r\n        <TouchableOpacity onPress={verifyCodes}>\r\n          <View style={styles.verifyButton}>\r\n            <View style={styles.verify}>\r\n              <Text style={styles.verifyText}>\r\n                Verify Email\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n  },\r\n  titleText: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n    color: 'white'\r\n  },\r\n  titleContainer: {\r\n    paddingLeft: 25,\r\n    paddingTop: 5\r\n  },\r\n  subtitleText: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: 24,\r\n    color: 'white'\r\n  },\r\n  subtitleContainer: {\r\n    paddingLeft: 25,\r\n    paddingTop: 5\r\n  },\r\n  backContainer: {\r\n    paddingLeft: 25,\r\n    paddingTop: 30\r\n  },\r\n  inputContainer:{\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    paddingTop: 50,\r\n  },\r\n  placeHolder: {\r\n    height: 45, \r\n    width: 317, \r\n    borderColor: 'silver', \r\n    borderRadius: 14, \r\n    borderWidth: 1,  \r\n    backgroundColor: Colors.grey,\r\n    marginBottom: 5, color: 'silver',\r\n    paddingLeft: 20\r\n  },\r\n  verify: {\r\n    height: 45,\r\n    width: 317,\r\n    borderRadius: 14,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: 'white',\r\n  },\r\n  verifyText: { \r\n    color: 'black',\r\n    fontSize: 17,\r\n    flexDirection: 'row',\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n    alignSelf: 'center', \r\n  },\r\n  verifyButton: {\r\n    paddingTop: 380\r\n  },\r\n  checkText: { \r\n    color: 'silver',\r\n    fontSize: 14,\r\n    paddingRight: 150,\r\n    paddingBottom: 45\r\n  },\r\n});\r\n\r\nexport default VerifyEmailScreen;\r\n"]},"metadata":{},"sourceType":"module"}